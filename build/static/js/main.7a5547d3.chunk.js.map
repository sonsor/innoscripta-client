{"version":3,"sources":["Components/TopNav/index.jsx","actions.js","Components/Cart/Quantity.jsx","Components/Price/index.jsx","Components/Cart/Item.jsx","Components/Cart/index.jsx","Components/Notification/index.jsx","Components/Layout/Main.jsx","Components/PizzaGrid/Item.jsx","Components/PizzaGrid/index.jsx","config.js","Components/Checkout/Form.jsx","Components/SmartCart/index.jsx","Components/Checkout/index.jsx","App.jsx","serviceWorker.js","reducers/general.js","reducers/pizzas.js","reducers/cart.js","reducers/index.js","middlewares/common/general.js","middlewares/common/notification.js","middlewares/common/index.js","middlewares/pizzas.js","middlewares/cart/map.js","middlewares/cart/index.js","middlewares/cart/loading.js","middlewares/cart/toggle.js","middlewares/cart/addToCart.js","middlewares/cart/removeItem.js","middlewares/cart/updateCartItemQty.js","middlewares/checkout.js","middlewares/index.js","store.js","index.js"],"names":["TopNav","cart","useSelector","state","dispath","useDispatch","Brand","Navbar","Toggle","Collapse","bg","variant","className","Container","href","aria-controls","id","Nav","as","Link","to","items","length","Button","onClick","e","type","Badge","pill","displayName","Quantity","props","useState","value","quantity","setQuantity","Control","Form","Group","onChange","emit","clas","placeholder","size","target","Price","unit","rest","toFixed","Item","name","price","onRemove","onUpdateQuantity","ListGroup","Row","Col","sm","Cart","Header","Modal","Title","Body","Footer","onHide","payload","aria-labelledby","show","closeButton","map","item","key","Card","style","width","sub_total","discount","history","push","withRouter","Notification","notification","general","Alert","message","Main","children","Img","Text","thumbnail","description","onAdd","src","PizzaGrid","pizzas","list","dispatch","useEffect","product_id","api","url","process","validator","email","plain","number","CheckoutForm","firstName","setFirstName","lastName","setLastName","setEamil","phone","setPhone","address","setAddress","country","setCountry","city","setCity","zipcode","setZipcode","valid","setValid","disabled","setDisabled","event","isValid","indexOf","onSubmit","preventDefault","stopPropagation","config","test","validate","alert","onCheckout","data","noValidate","isInvalid","SmartCart","shipping_cost","total","Checkout","md","values","App","exact","path","Boolean","window","location","hostname","match","init","loading","action","console","log","store","next","getState","noticiation","setTimeout","logger","axios","get","then","response","some","pizza","pizza_id","Promise","resolve","reject","post","catch","getCart","err","delete","patch","checkout","common","create","createStore","combineReducers","reduxers","applyMiddleware","thunk","middlewares","Root","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7a5547d3.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Navbar, Nav, Container, Badge} from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TOGGLE_CART } from \"../../actions\";\nimport { Link } from 'react-router-dom';\n\nconst TopNav = () => {\n\n    const cart = useSelector(state => state.cart);\n    const dispath = useDispatch();\n    const { Brand, Toggle, Collapse } = Navbar;\n\n    const toggle = e => {\n        dispath({\n            type: TOGGLE_CART\n        });\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-end\">\n            <Container>\n                <Brand href=\"#home\">Innoscripta</Brand>\n                <Toggle aria-controls=\"basic-navbar-nav\" />\n                <Collapse id=\"justify-content-end\">\n                    <Nav className=\"mr-auto\" />\n                    <Nav>\n                        <Link as={Link} to=\"/\">Menu</Link>\n                        <Link as={Link} to=\"/checkout\">Checkout</Link>\n                    </Nav>\n                    {cart.items.length > 0 &&\n                    <Button variant=\"outline-success\" onClick={toggle}>\n                        <span className=\"text-muted\">Cart</span>\n                        <Badge variant=\"secondary\" pill>{cart.items.length}</Badge>\n                    </Button>\n                    }\n                </Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nTopNav.displayName = TopNav;\nexport default TopNav;","export const SHOW_LOADING = 'SHOW_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';\nexport const TOGGLE_LOADING = 'TOGGLE_LOADING';\n\nexport const FETCH_PIZZAS = 'FETCH_PIZZAS';\nexport const PIZZAS_FETCHED = 'PIZZAS_FETCHED';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const CART_TOGGLE_LOADING = 'CART_TOGGLE_LOADING';\nexport const CART_SHOW_LOADING = 'CART_SHOW_LOADING';\nexport const CART_HIDE_LOADING = 'CART_HIDE_LOADING';\nexport const UPDATE_CART = 'UPDATE_CART';\nexport const CART_UPDATED = 'CART_UPDATED';\nexport const UPDATE_CART_ITEM_QTY = 'UPDATE_CART_ITEM_QTY'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const TOGGLE_CART = 'TOGGLE_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const SHOW_CART = 'SHOW_CART';\nexport const HIDE_CART = 'HIDE_CART';\nexport const DO_CHECKOUT = 'DO_CHECKOUT';\nexport const TOGGLE_NOTIFICATION = 'TOGGLE_NOTIFICATION';\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst Quantity = (props) => {\n\n    const [quantity, setQuantity] = useState(props.value);\n    const {\n        Control,\n        Group\n    } = Form\n\n    const {\n        onChange\n    } = props;\n\n    const emit = value => {\n        setQuantity(value)\n        if (typeof onChange === 'function') {\n            onChange(value)\n        }\n    }\n\n    const onUpdateQuantity = e => {\n        if (e.target.value > 0) {\n            emit(e.target.value);\n        }\n    }\n\n    const increment = () => {\n        emit(quantity + 1);\n    }\n\n    const decrement = () => {\n        if (quantity > 1) {\n            emit(quantity - 1);\n        }\n    }\n\n    return (\n        <Group clas>\n            <span className=\"input-group-btn\">\n                <Button onClick={decrement}>\n                    <span className=\"glyphicon glyphicon-minus\">-</span>\n                </Button>\n            </span>\n            <Control type=\"email\" placeholder=\"0\" value={quantity} size=\"sm\" onChange={onUpdateQuantity} />\n            <span className=\"input-group-btn\">\n                <Button onClick={increment}>\n                    <span className=\"glyphicon glyphicon-plus\">+</span>\n                </Button>\n            </span>\n        </Group>\n    )\n}\n\nQuantity.displayName = 'Quantity';\nexport default Quantity;","import React from 'react';\n\nconst Price = (props) => {\n\n    const {\n        value,\n        unit = 'eur',\n        ...rest\n    } = props;\n\n    if (unit === 'usd') {\n        return (\n            <sapn {...rest}>${(value * 1.08).toFixed(2)}</sapn>\n        )\n    }\n\n    return (\n        <sapn {...rest}>€{(value * 1).toFixed(2)}</sapn>\n    )\n}\n\nPrice.displayName = 'Price';\nexport default Price;","import React from 'react';\nimport { Button, ListGroup, Row, Col } from \"react-bootstrap\";\nimport Quantity from './Quantity';\nimport Price from '../Price';\n\nconst Item = (props) => {\n\n    const {\n        id,\n        name,\n        quantity,\n        price,\n        onRemove,\n        onUpdateQuantity\n    } = props\n\n    return (\n        <ListGroup.Item>\n            <hr />\n            <Row>\n                <Col sm={4}>\n                    <h6 className=\"my-0\">{name}</h6>\n                </Col>\n                <Col sm={2}>\n                    <Quantity value={quantity} onChange={onUpdateQuantity} />\n                </Col>\n                <Col sm={1}>\n                    <span className=\"text-muted\"> X </span>\n                </Col>\n                <Col sm={1}>\n                    <Price className=\"text-muted\" value={price} />\n                </Col>\n                <Col sm={2}>\n                    <Price className=\"text-muted\" value={quantity * price} />\n                </Col>\n                <Col sm={2}>\n                    <Button variant=\"dark\" onClick={onRemove(id)}>Remove</Button>\n                </Col>\n            </Row>\n        </ListGroup.Item>\n    )\n}\n\nItem.displayName = 'Item';\nexport default Item;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Item from './Item';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    Modal,\n    Button,\n    Badge,\n    ListGroup, Col, Row, Card\n} from \"react-bootstrap\";\nimport {\n    TOGGLE_CART,\n    UPDATE_CART_ITEM_QTY,\n    CART_REMOVE_ITEM\n} from \"../../actions\";\nimport Price from '../Price';\n\nconst Cart = (props) => {\n\n    const {\n        Header,\n        Title,\n        Body,\n        Footer\n    } = Modal\n\n    const cart = useSelector(state => state.cart);\n    const dispath = useDispatch();\n\n    const checkout = (e) => {\n        onHide(e);\n        props.history.push('/checkout');\n    }\n\n    const onHide = e => {\n        dispath({\n            type: TOGGLE_CART\n        });\n    }\n\n    const onUpdateQuantity = id => quantity => {\n        dispath({\n            type: UPDATE_CART_ITEM_QTY,\n            payload: {\n                id,\n                quantity\n            }\n        });\n    }\n\n    const onRemove = id => quantity => {\n        dispath({\n            type: CART_REMOVE_ITEM,\n            payload: {\n                id,\n                quantity\n            }\n        });\n    }\n\n    return (\n        <Modal\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            show={cart.show}\n            onHide={onHide}\n        >\n            <Header closeButton>\n                <Title id=\"contained-modal-title-vcenter\">\n                    <span className=\"text-muted\">Your cart</span>\n                    <Badge variant=\"secondary\" pill>{cart.items.length}</Badge>\n                </Title>\n\n            </Header>\n            <Body>\n                <ListGroup>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col sm={4}>\n                                <h6 className=\"my-0\">Name</h6>\n                            </Col>\n                            <Col sm={2}>\n                                <h6 className=\"text-muted\">Quantity</h6>\n                            </Col>\n                            <Col sm={1}>\n                                <h6 className=\"text-muted\"> X </h6>\n                            </Col>\n                            <Col sm={1}>\n                                <h6 className=\"text-muted\">Price</h6>\n                            </Col>\n                            <Col sm={2}>\n                                <h6 className=\"text-muted\">Sub Total</h6>\n                            </Col>\n                            <Col sm={2}>\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n                </ListGroup>\n                <ListGroup>\n                    {cart.items.map((item) => {\n                        return (\n                            <Item\n                                key={item.id}\n                                onRemove={onRemove}\n                                onUpdateQuantity={onUpdateQuantity(item.id)}\n                                {...item}\n                            />\n                        )\n                    })}\n                </ListGroup>\n            </Body>\n            <Footer>\n                <Card style={{ width: '18rem' }}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h5>Sub Total: <Price value={cart.sub_total} /></h5>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h5>Discount: <Price value={cart.discount} /></h5>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h5>Total: <Price value={cart.sub_total} /></h5>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Footer>\n            <Footer>\n                <Button onClick={checkout}>Checkout</Button>\n            </Footer>\n        </Modal>\n    )\n\n}\n\nCart.displayName = 'Cart';\nexport default withRouter(Cart);","import React from 'react'\nimport { useSelector } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Notification = () => {\n\n    const notification = useSelector(state => state.general.notification);\n\n    if (!notification.type) {\n        return null;\n    }\n\n    return (\n        <Alert variant={notification.type} className=\"my-3\">\n            {notification.message}\n        </Alert>\n    )\n}\n\nNotification.displayName = 'Notification';\nexport default Notification;","import React, { Fragment } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport TopNav from '../TopNav';\nimport Cart from '../Cart';\nimport Notification from '../Notification';\n\nconst Main = ({children}) => {\n    return (\n        <Fragment>\n            <TopNav />\n            <Container>\n                <Notification />\n                {children}\n            </Container>\n            <Cart />\n        </Fragment>\n    )\n}\n\nMain.displayName = 'Main';\nexport default Main;","import React from 'react'\nimport {Button, Card} from \"react-bootstrap\";\nimport Price from '../Price'\n\nconst Item = (props) => {\n\n    const { Img, Body,  Title, Text } = Card;\n    const {\n        id,\n        name,\n        thumbnail,\n        description,\n        price,\n        onAdd\n    } = props\n\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Img variant=\"top\" src={thumbnail} width={300}  />\n            <Body>\n                <Title>{name}</Title>\n                <Text>\n                    {description}\n                </Text>\n                <p className=\"mb-2\">\n                    Price:  <Price value={price} unit='usd' /> in USD, <Price value={price} unit='eur' /> in EUR\n                </p>\n                <Button\n                    variant=\"dark\"\n                    onClick={onAdd(id)}\n                >+</Button>\n            </Body>\n        </Card>\n    )\n}\n\nItem.displayName = 'Item';\nexport default Item;","import React, { useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Item from './Item';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FETCH_PIZZAS, ADD_TO_CART } from '../../actions';\n\nconst PizzaGrid = () => {\n\n    const pizzas = useSelector(state => state.pizzas.list)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: FETCH_PIZZAS\n        });\n    }, [dispatch])\n\n    const onAdd = id => e => {\n        dispatch({\n            type: ADD_TO_CART,\n            payload: {\n                product_id: id,\n                quantity: 1\n            }\n        });\n    }\n\n    return (\n        <Row>\n            {pizzas.map((item) => {\n                return (\n                    <Col sm={4} key={item.id}>\n                        <Item {...item} onAdd={onAdd} />\n                    </Col>\n                )\n            })}\n        </Row>\n    )\n}\n\nPizzaGrid.displayName = 'PizzaGrid'\nexport default PizzaGrid;","export default {\n    api: {\n        url: process.env.REACT_APP_API_URL\n    },\n    validator: {\n        email: /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\n        plain: /^[a-zA-Z]+$/,\n        number: /^[0-9]+$/\n    }\n}","import React, { useState } from 'react';\nimport {\n    Row,\n    Col,\n    Form,\n    Button\n} from 'react-bootstrap';\nimport config from '../../config';\n\nconst CheckoutForm = (props) => {\n\n    const { Control } = Form;\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEamil] = useState('');\n    const [phone, setPhone] = useState('');\n    const [address, setAddress] = useState('');\n    const [country, setCountry] = useState('');\n    const [city, setCity] = useState('');\n    const [zipcode, setZipcode] = useState('');\n    const [valid, setValid] = useState([]);\n    const [disabled, setDisabled] = useState(false);\n\n    const onChange = name => event => {\n        const { value }= event.target;\n        switch (name) {\n            case 'firstName':\n                setFirstName(value);\n                break;\n            case 'lastName':\n                setLastName(value)\n                break;\n            case 'email':\n                setEamil(value)\n                break;\n            case 'phone':\n                setPhone(value)\n                break;\n            case 'address':\n                setAddress(value)\n                break;\n            case 'country':\n                setCountry(value)\n                break;\n            case 'city':\n                setCity(value);\n                break;\n            case 'zipcode':\n                setZipcode(value);\n                break;\n            default:\n                // noting to do\n        }\n    }\n\n    const validate = () => {\n        const valid = [];\n\n        if (!config.validator.plain.test(firstName)) {\n            valid.push('firstName');\n        }\n\n        if (!config.validator.plain.test(lastName)) {\n            valid.push('lastName');\n        }\n\n        if (!config.validator.email.test(email)) {\n            valid.push('email');\n        }\n\n        if (!config.validator.number.test(phone)) {\n            valid.push('phone');\n        }\n\n        if (!config.validator.plain.test(address)) {\n            valid.push('address');\n        }\n\n        if (!config.validator.plain.test(country)) {\n            valid.push('country');\n        }\n\n        if (!config.validator.plain.test(city)) {\n            valid.push('city');\n        }\n\n        if (!config.validator.plain.test(zipcode)) {\n            valid.push('zipcode');\n        }\n\n        setValid(valid);\n        return valid.length === 0\n    }\n\n    const isValid = name => {\n        return valid.indexOf(name) > -1\n    }\n\n    const onSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        setDisabled(true);\n        if (validate()) {\n\n            alert(1);\n            if (typeof props.onCheckout === 'function') {\n                alert(2);\n\n                const data = {\n                    firstName,\n                    lastName,\n                    email,\n                    phone,\n                    address,\n                    country,\n                    city,\n                    zipcode\n                };\n\n                return props.onCheckout({...data});\n            }\n        }\n        setDisabled(false);\n    }\n\n    return (\n        <Form onSubmit={onSubmit} noValidate disabled={disabled}>\n            <h6>Delivery Information</h6>\n            <Row className=\"my-3\">\n                <Col>\n                    <Control\n                        placeholder=\"First Name\"\n                        value={firstName}\n                        onChange={onChange('firstName')}\n                        isInvalid={isValid('lastName')}\n                    />\n                </Col>\n                <Col>\n                    <Control\n                        placeholder=\"Last name\"\n                        value={lastName}\n                        onChange={onChange('lastName')}\n                        isInvalid={isValid('lastName')}\n                    />\n                </Col>\n            </Row>\n            <Row className=\"my-3\">\n                <Col>\n                    <Control\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={onChange('email')}\n                        isInvalid={isValid('email')}\n                    />\n                </Col>\n                <Col>\n                    <Control\n                        placeholder=\"Phone\"\n                        value={phone}\n                        onChange={onChange('phone')}\n                        isInvalid={isValid('phone')}\n                    />\n                </Col>\n            </Row>\n            <Row className=\"my-3\">\n                <Col>\n                    <Control\n                        placeholder=\"Address\"\n                        value={address}\n                        onChange={onChange('address')}\n                        isInvalid={isValid('address')}\n                    />\n                </Col>\n            </Row>\n            <Row className=\"my-3\">\n                <Col>\n                    <Control\n                        placeholder=\"Country\"\n                        value={country}\n                        onChange={onChange('country')}\n                        isInvalid={isValid('country')}\n                    />\n                </Col>\n                <Col>\n                    <Control\n                        placeholder=\"State / City\"\n                        value={city}\n                        onChange={onChange('city')}\n                        isInvalid={isValid('city')}\n                    />\n                </Col>\n                <Col>\n                    <Control\n                        placeholder=\"Zip Code\"\n                        value={zipcode}\n                        onChange={onChange('zipcode')}\n                        isInvalid={isValid('zipcode')}\n                    />\n                </Col>\n            </Row>\n            <Button\n                type=\"submit\"\n                variant=\"primary\"\n            >Checkout</Button>\n        </Form>\n    )\n}\n\nCheckoutForm.displayName = 'CheckoutForm';\nexport default CheckoutForm;","import React, { Fragment } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { ListGroup, Badge } from \"react-bootstrap/esm\";\nimport Price from '../Price'\n\nconst SmartCart = () => {\n\n    const cart = useSelector(state => state.cart);\n\n    return (\n        <Fragment>\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n                <span className=\"text-muted\">Your Cart</span>\n                <Badge pill>{cart.items.length}</Badge>\n            </h4>\n            <ListGroup as=\"ul\">\n                {cart.items.map(item => {\n                    return (\n                        <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between lh-condensed\">\n                            <div>\n                                <h6 className=\"my-0\">{item.name}</h6>\n                            </div>\n                            <Price className=\"text-muted\" value={item.price * item.quantity} />\n                        </ListGroup.Item>\n                    )\n                })}\n                <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between lh-condensed\">\n                    <div>\n                        <h6 className=\"my-0\">Sub Total</h6>\n                    </div>\n                    <Price className=\"text-muted\" value={cart.sub_total} />\n                </ListGroup.Item>\n                <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between lh-condensed\">\n                    <div>\n                        <h6 className=\"my-0\">Discount</h6>\n                    </div>\n                    <Price className=\"text-muted\" value={cart.discount} />\n                </ListGroup.Item>\n                <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between lh-condensed\">\n                    <div>\n                        <h6 className=\"my-0\">Delivery Charges</h6>\n                    </div>\n                    <Price className=\"text-muted\" value={cart.shipping_cost} />\n                </ListGroup.Item>\n                <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between lh-condensed\">\n                    <div>\n                        <h6 className=\"my-0\">Total</h6>\n                    </div>\n                    <Price className=\"text-muted\" value={cart.total} />\n                </ListGroup.Item>\n            </ListGroup>\n        </Fragment>\n    )\n}\n\nSmartCart.displayName = 'SmartCart';\nexport default SmartCart;","import React, { Fragment } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport CheckoutForm from './Form';\nimport SmartCart from '../SmartCart';\nimport { DO_CHECKOUT } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Checkout = () => {\n\n    const cart = useSelector(state => state.cart);\n    const dispatch = useDispatch();\n    const doCheckout = values => {\n        dispatch({\n            type: DO_CHECKOUT,\n            payload: {\n                id: cart.id,\n                values\n            }\n        })\n    }\n\n    if (!cart.id || cart.items.length <= 0) {\n        return (\n            <Row className=\"my-5\">\n                <Col className=\"d-flex justify-content-center\">\n                    <h1>Please first select some pizza to do checkout</h1>\n                </Col>\n            </Row>\n        )\n    }\n\n    return (\n        <Fragment>\n            <h3 className=\"my-3\">Checkout</h3>\n            <Row>\n                <Col md={8}>\n                    <CheckoutForm onCheckout={doCheckout} />\n                </Col>\n                <Col md={4}>\n                    <SmartCart />\n                </Col>\n            </Row>\n        </Fragment>\n    )\n\n}\n\nCheckout.displayName = 'Checkout';\nexport default Checkout;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Main from './Components/Layout/Main';\nimport PizzaGrid from './Components/PizzaGrid';\nimport Checkout from './Components/Checkout';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Main>\n            <PizzaGrid />\n          </Main>\n        </Route>\n        <Route exact path=\"/checkout\">\n          <Main>\n          <Checkout />\n          </Main>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    SHOW_LOADING,\n    HIDE_LOADING,\n    SHOW_NOTIFICATION,\n    HIDE_NOTIFICATION\n} from '../actions';\n\nconst init = {\n    loading: true,\n    notification: {\n        type: '',\n        message: ''\n    }\n}\n\nconst general = (state = init, action) => {\n    console.log(\"state : \", state);\n    switch (action.type) {\n        case SHOW_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case HIDE_LOADING:\n            return {\n                ...state,\n                loading: false\n            }\n        case SHOW_NOTIFICATION:\n            return {\n                ...state,\n                notification: {...action.payload}\n            }\n        case HIDE_NOTIFICATION:\n            return {\n                ...state,\n                notification: {...init.notification}\n            }\n        default:\n            return state\n    }\n}\n\nexport default general;","import {\n    PIZZAS_FETCHED\n} from '../actions';\n\nconst init = {\n    list: []\n}\n\nconst pizzas = (state = init, action) => {\n    console.log(\"action : \", action)\n    switch (action.type) {\n        case PIZZAS_FETCHED:\n            return {\n                ...state,\n                list: [\n                    ...state.list,\n                    ...action.payload\n                ]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default pizzas;","import {\n    CART_SHOW_LOADING,\n    CART_HIDE_LOADING,\n    CART_UPDATED,\n    SHOW_CART,\n    HIDE_CART,\n    CLEAR_CART\n} from '../actions';\nconst init = {\n    loading: false,\n    show: false,\n    id: '',\n    sub_total: 0,\n    discount: 0,\n    shipping_cost: 0,\n    total: 0,\n    items: []\n}\n\nconst cart = (state = init, action) => {\n    switch (action.type) {\n        case CART_SHOW_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case CART_HIDE_LOADING:\n            return {\n                ...state,\n                loading: false\n            }\n        case SHOW_CART:\n            return {\n                ...state,\n                show: true\n            }\n        case HIDE_CART:\n            return {\n                ...state,\n                show: false\n            }\n        case CART_UPDATED:\n            return {\n                ...state,\n                id: action.payload.id,\n                sub_total: action.payload.sub_total,\n                total: action.payload.total,\n                discount: action.payload.discount,\n                shipping_cost: action.payload.shipping_cost,\n                items: [\n                    ...action.payload.items\n                ]\n            }\n        case CLEAR_CART:\n            return init;\n        default:\n            return state;\n    }\n}\n\nexport default cart;","import general from './general'\nimport pizzas from './pizzas';\nimport cart from './cart'\n\nexport default {\n    general,\n    pizzas,\n    cart\n}","import {\n    SHOW_LOADING,\n    HIDE_LOADING,\n    TOGGLE_LOADING\n} from '../../actions';\n\nconst general = store => next => action => {\n\n    const loading = store.getState().general.loading;\n    if (action.type === TOGGLE_LOADING) {\n        loading ?\n            store.dispatch({type: HIDE_LOADING}):\n            store.dispatch({type: SHOW_LOADING});\n    }\n\n    return next(action);\n}\n\nexport default general;","import {\n    TOGGLE_NOTIFICATION,\n    SHOW_NOTIFICATION,\n    HIDE_NOTIFICATION\n} from \"../../actions\";\n\nconst noticiation = store => next => action => {\n    const state = store.getState();\n    const { type, payload } = action;\n\n    if (type === TOGGLE_NOTIFICATION) {\n\n        if (state.general.notification.type) {\n            store.dispatch({type: HIDE_NOTIFICATION})\n        }\n\n        if (!state.general.notification.type) {\n            store.dispatch({type: SHOW_NOTIFICATION, payload})\n            setTimeout(() => {\n                store.dispatch({type: HIDE_NOTIFICATION})\n            }, 1000)\n        }\n\n    }\n\n    return next(action);\n}\n\nexport default noticiation;","import logger from 'redux-logger';\nimport general from './general';\nimport notification from './notification';\n\nexport default [\n    logger,\n    general,\n    notification\n];","import {\n    FETCH_PIZZAS,\n    PIZZAS_FETCHED\n} from '../actions';\nimport config from '../config';\nimport axios from 'axios';\n\nconst pizzas = store => next => action => {\n\n    if (action.type === FETCH_PIZZAS) {\n\n        axios.get(config.api.url + '/pizzas')\n            .then(response => {\n                store.dispatch({\n                    type: PIZZAS_FETCHED,\n                    payload: response.data\n                })\n            })\n    }\n\n    return next(action);\n\n}\n\nexport default pizzas;","const map = (state, items) => {\n    return items.map((item) => {\n        state.pizzas.list.some((pizza) => {\n            if (pizza.id === item.pizza_id) {\n                item.name = pizza.name\n                return true;\n            }\n        })\n        return item;\n    })\n}\n\nexport default map;","import loading from './loading';\nimport toggle from './toggle';\nimport addToCart from './addToCart';\nimport removeItem from './removeItem';\nimport updateCartItemQty from './updateCartItemQty'\n\nexport default [\n    loading,\n    toggle,\n    addToCart,\n    removeItem,\n    updateCartItemQty\n]","import {\n    CART_TOGGLE_LOADING,\n    CART_SHOW_LOADING,\n    CART_HIDE_LOADING,\n} from \"../../actions\";\n\nconst loading = store => next => action => {\n\n    const state = store.getState();\n    if (action.type === CART_TOGGLE_LOADING) {\n        state.cart.loading ?\n            store.dispatch({type: CART_HIDE_LOADING}):\n            store.dispatch({type: CART_SHOW_LOADING})\n    }\n\n    return next(action);\n}\n\nexport default loading;","import {\n    HIDE_CART,\n    SHOW_CART,\n    TOGGLE_CART\n} from \"../../actions\";\n\nconst toggle = store => next => action => {\n\n    const state = store.getState();\n    if (action.type === TOGGLE_CART) {\n        state.cart.show ?\n            store.dispatch({type: HIDE_CART}):\n            store.dispatch({type: SHOW_CART})\n    }\n\n    return next(action);\n}\n\nexport default toggle;","import {\n    ADD_TO_CART,\n    CART_UPDATED,\n    CART_TOGGLE_LOADING, TOGGLE_NOTIFICATION\n} from \"../../actions\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport map from './map';\n\nconst getCart = (state, config) => {\n    return new Promise((resolve, reject) => {\n        if (!state.cart.id) {\n            axios.post(config.api.url + '/cart', {})\n                .then(response => resolve(response.data.id))\n                .catch(reject);\n        } else {\n            resolve(state.cart.id);\n        }\n    });\n}\n\nconst addToCart = store => next => action => {\n\n    const state = store.getState();\n    if (action.type === ADD_TO_CART) {\n        store.dispatch({type: CART_TOGGLE_LOADING});\n\n        const cart = getCart(state, config);\n\n        cart.then(id => {\n            axios.post(config.api.url + '/cart/' + id + '/items', action.payload)\n                .then(response => {\n                    response.data.items = map(state, response.data.items);\n                    store.dispatch({\n                        type: CART_UPDATED,\n                        payload: response.data\n                    });\n                    store.dispatch({type: CART_TOGGLE_LOADING});\n                    store.dispatch({\n                        type: TOGGLE_NOTIFICATION,\n                        payload: {\n                            type: 'success',\n                            message: 'Item Added Succesfully'\n                        }\n                    });\n                })\n                .catch(err => {\n                    store.dispatch({type: CART_TOGGLE_LOADING});\n                    store.dispatch({\n                        type: TOGGLE_NOTIFICATION,\n                        payload: {\n                            type: 'warning',\n                            message: 'There is some error in process please try again later'\n                        }\n                    });\n                });\n        });\n    }\n\n    return next(action);\n}\n\nexport default addToCart;","import {\n    CART_REMOVE_ITEM,\n    CART_UPDATED,\n    CART_TOGGLE_LOADING\n} from \"../../actions\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport map from './map';\n\nconst remoteItem = store => next => action => {\n\n    const state = store.getState();\n\n    if (action.type === CART_REMOVE_ITEM) {\n        store.dispatch({type: CART_TOGGLE_LOADING});\n\n        axios.delete(config.api.url + '/cart/' + state.cart.id + '/items/' + action.payload.id, )\n            .then(response => {\n                response.data.items = map(state, response.data.items);\n                store.dispatch({\n                    type: CART_UPDATED,\n                    payload: response.data\n                })\n\n                store.dispatch({type: CART_TOGGLE_LOADING});\n            }).catch(console.log)\n    }\n\n    return next(action);\n}\n\nexport default remoteItem;","import {\n    CART_UPDATED,\n    UPDATE_CART_ITEM_QTY,\n    CART_TOGGLE_LOADING\n} from \"../../actions\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport map from './map';\n\nconst updateCartItemQty = store => next => action => {\n\n    const state = store.getState();\n    if (action.type === UPDATE_CART_ITEM_QTY) {\n\n        store.dispatch({type: CART_TOGGLE_LOADING});\n\n        axios.patch(config.api.url + '/cart/' + state.cart.id + '/items/' + action.payload.id, {\n            quantity: action.payload.quantity\n        }).then(response => {\n            response.data.items = map(state, response.data.items);\n            store.dispatch({\n                type: CART_UPDATED,\n                payload: response.data\n            })\n\n            store.dispatch({type: CART_TOGGLE_LOADING});\n        }).catch(console.log)\n\n    }\n\n    return next(action);\n}\n\nexport default updateCartItemQty;","import {\n    DO_CHECKOUT,\n    TOGGLE_LOADING,\n    CLEAR_CART, TOGGLE_NOTIFICATION\n} from \"../actions\";\nimport config from '../config';\nimport axios from 'axios';\n\nconst checkout = store => next => action => {\n\n    const { type, payload } = action;\n\n    if (type === DO_CHECKOUT) {\n        store.dispatch({type: TOGGLE_LOADING});\n\n        axios.post(config.api.url + '/cart/' + payload.id + '/checkout', payload.values)\n            .then(response => {\n                store.dispatch({\n                    type: TOGGLE_NOTIFICATION,\n                    payload: {\n                        type: 'success',\n                        message: 'Successfully Processed.'\n                    }\n                });\n                store.dispatch({type: CLEAR_CART})\n                store.dispatch({type: TOGGLE_LOADING});\n            })\n            .catch(err => store.dispatch({type: TOGGLE_LOADING}))\n    }\n\n    return next(action);\n}\n\nexport default checkout;","import common from './common';\nimport pizzas from './pizzas';\nimport cart from './cart';\nimport checkout from './checkout'\n\nexport default [\n    ...common,\n    pizzas,\n    ...cart,\n    checkout\n]","import {\n    createStore,\n    applyMiddleware,\n    combineReducers\n} from 'redux';\nimport reduxers from './reducers';\nimport middlewares from './middlewares';\nimport thunk from 'redux-thunk';\n\nconst create = (state, ) => {\n    return createStore(\n        combineReducers(reduxers),\n        state,\n        applyMiddleware(...[thunk, ...middlewares])\n    )\n};\n\nexport default create;","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport create from './store';\nimport { Provider } from 'react-redux';\n\nconst Root = () => {\n\n  const store = create({})\n\n  return (\n      <StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </StrictMode>\n  )\n}\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}